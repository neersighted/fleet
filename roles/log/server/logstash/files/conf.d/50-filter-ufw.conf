filter {
  if [type] == "ufw" {
    # Strip out the message.
    grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:ufw_host} kernel: %{GREEDYDATA:message}" ]
      overwrite => [ "message" ]
    }

    # Strip noise.
    if [message] =~ /^\[.*\]/ {
      grok {
        match => [ "message", "\[%{DATA}\] %{GREEDYDATA:message}" ]
        overwrite => [ "message" ]
      }
    }


    # Parse log lines.
    grok {
      match => [ "message", "\[UFW %{DATA:ufw_action}\] IN=%{DATA:ufw_interface} OUT= MAC=%{DATA:ufw_mac} SRC=%{IP:ufw_src_ip} DST=%{IP:ufw_dest_ip} %{GREEDYDATA:ufw_tcp_opts} PROTO=%{WORD:ufw_protocol} SPT=%{INT:ufw_src_port} DPT=%{INT:ufw_dst_port} %{GREEDYDATA:ufw_tcp_opts}" ]
    }


    geoip {
      source => "ufw_src_ip"
    }

    date {
      match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      remove_field => [ "timestamp" ]
    }
  }
}
