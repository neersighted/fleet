#!/bin/bash

### BEGIN INIT INFO
# Provides:          zram
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Compressed swap pages in memory
# Description:       Boost performance with compressed swap pages in memory
### END INIT INFO

. /lib/lsb/init-functions

DEFAULTS=/etc/default/zram
[ -r "$DEFAULTS" ] && . "$DEFAULTS"

start() {
  if [ -z "$ZRAM_DEVICES" ] || [ "$ZRAM_DEVICES" -le "0" ]; then
    cpus=$(grep -c processor /proc/cpuinfo)
  else
    cpus=$ZRAM_DEVICES
  fi
  [ "$cpus" != 0 ] || cpus=1

  param=$(/usr/bin/env modinfo --parameters zram | head -1 | cut -d: -f1)
  found=$?

    # load dependency modules
  if [ "$found" == 0 ]; then
    log_begin_msg "Loading Zram"
    modprobe zram ${param}=${cpus}
    log_end_msg $?
  else
    log_failure_msg "Failed to load Zram"
    exit $found
  fi

  mem_kb=$(fgrep MemTotal /proc/meminfo | grep -E --only-matching '[[:digit:]]+')
  mem=$((mem_kb * 1024))

  if [ -z "$ZRAM_PERCENT" ] || [ "$ZRAM_PERCENT" -le "0" ] || [ "$ZRAM_PERCENT" -gt "100" ]; then
    mem_percent=75
  else
    mem_percent=$ZRAM_PERCENT
  fi

  zmem=$((mem_percent * mem / cpus / 100))

  for i in $(seq 0 $((cpus - 1))); do
    echo $zmem > /sys/block/zram${i}/disksize
  done

  page_size=$(/usr/bin/env getconf PAGESIZE || /usr/bin/env getconf PAGE_SIZE)

  for i in $(seq 0 $((cpus - 1))); do
    msg="Making swap on /dev/zram${i}"
    mkswap -p $page_size /dev/zram${i}
    [ "$?" -eq "0" ] && log_success_msg $msg || log_failure_msg $msg
  done

  for i in $(seq 0 $((cpus - 1))); do
    msg="Activating swap on /dev/zram${i}"
    swapon -p 100 /dev/zram${i}
    [ "$?" -eq "0" ] && log_success_msg $msg || log_failure_msg $msg
  done

  log_end_msg 0
}

stop() {
    for zswap in $(fgrep /dev/zram /proc/swaps | cut -d' ' -f1); do
      swapoff $zswap
    done

    [ -z "$(fgrep zram /proc/modules)" ] || rmmod zram
}

case "$1" in
    start) start ;;
    stop) stop ;;
    restart) stop; sleep 3; start ;;
    *) echo "Usage: $0 {start|stop|restart}" ;;
esac
